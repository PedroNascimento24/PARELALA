========================================================================
=== ULTIMATE JOB SHOP SCHEDULING ANALYSIS REPORT ===
========================================================================
Generated: 06/15/2025 17:16:38
Configuration: analysis_config.json
Total Tests Executed: 12

=== ALGORITHM PERFORMANCE SUMMARY ===

--- P2_Medium Results ---
Algorithm           Implementation      Makespan    Time(ms)    Operation Distribution
----------------------------------------------------------------------------------------------------
BranchAndBound      Parallel_16threads  115         20          Jobs: 5, Total Ops: 22, Avg Ops/Thread: 1.4
BranchAndBound      Parallel_1threads   149         6           Jobs: 5, Total Ops: 22, Avg Ops/Thread: 22
BranchAndBound      Parallel_2threads   149         8.5         Jobs: 5, Total Ops: 22, Avg Ops/Thread: 11
BranchAndBound      Parallel_4threads   149         10          Jobs: 5, Total Ops: 22, Avg Ops/Thread: 5.5
BranchAndBound      Parallel_8threads   110         13          Jobs: 5, Total Ops: 22, Avg Ops/Thread: 2.8
BranchAndBound      Sequential          149         6.5         Jobs: 4, Total Ops: 18, Avg Ops/Thread: 18
ShiftingBottleneck  Parallel_16threads  65          8           Jobs: 41, Total Ops: 345, Avg Ops/Thread: 21.6
ShiftingBottleneck  Parallel_1threads   65          8           Jobs: 41, Total Ops: 345, Avg Ops/Thread: 345
ShiftingBottleneck  Parallel_2threads   65          7.5         Jobs: 41, Total Ops: 345, Avg Ops/Thread: 172.5
ShiftingBottleneck  Parallel_4threads   65          7           Jobs: 41, Total Ops: 345, Avg Ops/Thread: 86.2
ShiftingBottleneck  Parallel_8threads   65          8.3         Jobs: 41, Total Ops: 345, Avg Ops/Thread: 43.1
ShiftingBottleneck  Sequential          65          6           Jobs: 41, Total Ops: 345, Avg Ops/Thread: 345

=== PERFORMANCE INSIGHTS ===

This report compares the performance of different scheduling algorithms:
* Makespan: Lower values indicate better scheduling efficiency
* Execution Time: Algorithm computational performance
* Operation Distribution: How work is divided among threads (for parallel implementations)

=== ALGORITHM DESCRIPTIONS ===
* Greedy: Earliest start time heuristic
* SPT: Shortest Processing Time first
* LPT: Longest Processing Time first  
* MOR: Most Operations Remaining priority
* ShiftingBottleneck: Shifting Bottleneck heuristic

=== FILES GENERATED ===
* Results: Result/[Algorithm]/[Category]/
* Logs: Logs/[Algorithm]/[Category]/
* Configuration: analysis_config.json

=== USAGE EXAMPLES ===
.\ultimate_analysis.ps1                    # Run all enabled algorithms
.\ultimate_analysis.ps1 -QuickTest         # Quick test with small dataset only
.\ultimate_analysis.ps1 -AlgorithmFilter SPT # Run only SPT algorithm
.\ultimate_analysis.ps1 -DatasetFilter Small # Run only small dataset
.\ultimate_analysis.ps1 -CleanOnly         # Clean all previous results
.\ultimate_analysis.ps1 -GenerateConfig    # Generate fresh config file

========================================================================
